context.properties = {
  log.level = 0
}
context.spa-libs = {
  audio.convert.* = audioconvert/libspa-audioconvert
  support.* = support/libspa-support
}
context.modules = [
  {
    name = libpipewire-module-rt
    args = {}
    flags = [
      ifexists
      nofail
    ]
  }
  {
    name = libpipewire-module-protocol-native
  }
  {
    name = libpipewire-module-client-node
  }
  {
    name = libpipewire-module-adapter
  }
  {
    name = libpipewire-module-filter-chain
    args = {
      node.name = effect_input.rnnoise
      node.description = "Noise Canceling source"
      media.name = "Noise Canceling source"
      filter.graph = {
        nodes = [
          {
            type = ladspa
            name = rnnoise
            plugin = librnnoise_ladspa
            label = noise_suppressor_stereo
            control = {
              VAD Threshold (%) = 50
            }
          }
        ]
      }
      capture.props = {
        node.passive = true
        node.target = alsa_input.usb-Samson_Technologies_Samson_C01U_Pro_Mic-00.mono-fallback
      }
      playback.props = {
        media.class = Audio/Source
      }
    }
  }
]
